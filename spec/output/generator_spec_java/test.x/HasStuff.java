// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package MyXDR;

import java.io.IOException;

import org.stellar.sdk.Base64Factory;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.AllArgsConstructor;
import lombok.Builder;

/**
 * HasStuff's original definition in the XDR file is:
 * <pre>
 * struct HasStuff
 * {
 *   LotsOfMyStructs data;
 * };
 * </pre>
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder(toBuilder = true)
public class HasStuff implements XdrElement {
  private LotsOfMyStructs data;
  public void encode(XdrDataOutputStream stream) throws IOException{
    data.encode(stream);
  }
  public static HasStuff decode(XdrDataInputStream stream) throws IOException {
    HasStuff decodedHasStuff = new HasStuff();
    decodedHasStuff.data = LotsOfMyStructs.decode(stream);
    return decodedHasStuff;
  }
  public static HasStuff fromXdrBase64(String xdr) throws IOException {
    byte[] bytes = Base64Factory.getInstance().decode(xdr);
    return fromXdrByteArray(bytes);
  }

  public static HasStuff fromXdrByteArray(byte[] xdr) throws IOException {
    ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(xdr);
    XdrDataInputStream xdrDataInputStream = new XdrDataInputStream(byteArrayInputStream);
    return decode(xdrDataInputStream);
  }
}
