// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package MyXDR;

import java.io.IOException;

import org.stellar.sdk.Base64Factory;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.AllArgsConstructor;

/**
 * Int1's original definition in the XDR file is:
 * <pre>
 * typedef int             int1;
 * </pre>
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
public class Int1 implements XdrElement {
  private Integer int1;
  public void encode(XdrDataOutputStream stream) throws IOException {
    stream.writeInt(int1);
  }

  public static Int1 decode(XdrDataInputStream stream) throws IOException {
    Int1 decodedInt1 = new Int1();
    decodedInt1.int1 = stream.readInt();
    return decodedInt1;
  }

  public static Int1 fromXdrBase64(String xdr) throws IOException {
    byte[] bytes = Base64Factory.getInstance().decode(xdr);
    return fromXdrByteArray(bytes);
  }

  public static Int1 fromXdrByteArray(byte[] xdr) throws IOException {
    ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(xdr);
    XdrDataInputStream xdrDataInputStream = new XdrDataInputStream(byteArrayInputStream);
    return decode(xdrDataInputStream);
  }
}
