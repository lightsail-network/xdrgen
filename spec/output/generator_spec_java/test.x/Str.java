// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package MyXDR;

import java.io.IOException;

import org.stellar.sdk.Base64Factory;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.AllArgsConstructor;

/**
 * Str's original definition in the XDR file is:
 * <pre>
 * typedef string str&lt;64&gt;;
 * </pre>
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
public class Str implements XdrElement {
  private XdrString str;
  public void encode(XdrDataOutputStream stream) throws IOException {
    str.encode(stream);
  }

  public static Str decode(XdrDataInputStream stream) throws IOException {
    Str decodedStr = new Str();
    decodedStr.str = XdrString.decode(stream, 64);
    return decodedStr;
  }

  public static Str fromXdrBase64(String xdr) throws IOException {
    byte[] bytes = Base64Factory.getInstance().decode(xdr);
    return fromXdrByteArray(bytes);
  }

  public static Str fromXdrByteArray(byte[] xdr) throws IOException {
    ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(xdr);
    XdrDataInputStream xdrDataInputStream = new XdrDataInputStream(byteArrayInputStream);
    return decode(xdrDataInputStream);
  }
}
