// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package MyXDR;

import java.io.IOException;

import org.stellar.sdk.Base64Factory;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;

/**
 * UnionKey's original definition in the XDR file is:
 * <pre>
 * enum UnionKey {
 *   ONE = 1,
 *   TWO = 2,
 *   OFFER = 3
 * };
 * </pre>
 */
public enum UnionKey implements XdrElement {
  ONE(1),
  TWO(2),
  OFFER(3);

  private final int value;

  UnionKey(int value) {
      this.value = value;
  }

  public int getValue() {
      return value;
  }

  public static UnionKey decode(XdrDataInputStream stream) throws IOException {
    int value = stream.readInt();
    switch (value) {
      case 1: return ONE;
      case 2: return TWO;
      case 3: return OFFER;
      default:
        throw new IllegalArgumentException("Unknown enum value: " + value);
    }
  }

  public void encode(XdrDataOutputStream stream) throws IOException {
    stream.writeInt(value);
  }
  public static UnionKey fromXdrBase64(String xdr) throws IOException {
    byte[] bytes = Base64Factory.getInstance().decode(xdr);
    return fromXdrByteArray(bytes);
  }

  public static UnionKey fromXdrByteArray(byte[] xdr) throws IOException {
    ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(xdr);
    XdrDataInputStream xdrDataInputStream = new XdrDataInputStream(byteArrayInputStream);
    return decode(xdrDataInputStream);
  }
}
